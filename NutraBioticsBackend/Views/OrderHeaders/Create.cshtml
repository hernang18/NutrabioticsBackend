@model NutraBioticsBackend.Models.OrderHeader

@{
    ViewBag.Title = "Create";
}
 
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal"> 
            <h4>OrderHeader</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("CustomerId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreditHold, "CreditHold", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CreditHold)
                        @Html.ValidationMessageFor(model => model.CreditHold, "", new { @disabled = true, @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date' id='FechaOrden' style="width:280px">
                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NeedByDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date' id='FechaNecesidad' style="width:280px">
                        @Html.EditorFor(model => model.NeedByDate, new { htmlAttributes = new { @class = "form-control" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.NeedByDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TermsCode, "TermsCode", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TermsCode, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control", id = "TermsCode" } })
                    @Html.ValidationMessageFor(model => model.TermsCode, "", new { @class = "text-danger" })
                </div>
            </div>
           
    </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ShipToId, "ShipTo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ShipToId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShipToId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactId, "Contacto", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ContactId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Observations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Observations, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Observations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TaxAmt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TaxAmt, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TaxAmt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @readonly = "readonly", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SincronizadoEpicor, htmlAttributes: new { @readonly = "readonly", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.SincronizadoEpicor)
                        @Html.ValidationMessageFor(model => model.SincronizadoEpicor, "", new { @disabled = true, @class = "text-danger" })
                    </div>
                </div>
            </div>          
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
                @Html.ActionLink("Agregar Producto", "AddProduct", new { }, new { @class = "btn btn-warning" })
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(
            function ()
            {
                $("#CustomerId").change(function ()
                {
                            $("#ShipToId").empty();
                            $("#ContactId").empty();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetShipToesList")',
                                dataType: 'json',
                                data: { CustomerId: $("#CustomerId").val() },
                                success: function (shiptoes) {
                                    $.each(shiptoes, function (i, shipto) {
                                        $("#ShipToId").append('<option value="'
                                            + shipto.ShipToId + '">'
                                            + shipto.ShipToName + '</option>');
                                    });
                                },
                                error: function (ex) {
                                    alert('El cliente no tiene shipto Asociado');
                                }
                            });
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetCustomeList")',
                                dataType: 'json',
                                data: { CustomerId: $("#CustomerId").val() },
                                success: function (customers) {
                                    $.each(customers, function (i, customer) {
                                        $("#TermsCode").attr("value", customer.TermsCode);
                                        $("#CreditHold").prop('checked', customer.CreditHold);
                                        $("#CreditHold").prop('disabled', true);
                                        $("#SincronizadoEpicor").prop('disabled', true);
                                    });
                                },
                            });
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetContactList")',
                                dataType: 'json',
                                data: { ShipToId: $("#ShipToId").val() },
                                success: function (contacts) {
                                $.each(contacts, function (i, contact) {
                                    $("#ContactId").append('<option value="'
                                        + contact.ContactId + '">'
                                        + contact.Name + '</option>');
                                });
                                },
                            });
                            return false;
                })
                $("#ShipToId").change(function ()
                {
                            $("#ContactId").empty();
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetContactList")',
                                dataType: 'json',
                                data: { ShipToId: $("#ShipToId").val() },
                                success: function (contacts) {
                                    $.each(contacts, function (i, contact) {
                                        $("#ContactId").append('<option value="'
                                            + contact.ContactId + '">'
                                            + contact.Name + '</option>');
                                    });
                                },
                                //error: function (ex) {
                                //    alert('EL shipto no tiene contactos Asociados');
                                //}

                            });
                            return false;
                })
            }
        );
    </script>
    <script src="http://code.jquery.com/jquery-1.9.1.js"></script>
    <script src="http://code.jquery.com/ui/1.10.1/jquery-ui.js"></script>
}
